syntax = "proto3";

package raft;

// Thêm go_package
option go_package = "services/raft;raft"; // Thay thế "yourmodule" bằng module của bạn

// Các thông điệp
message RequestVoteRequest {
    int32 term = 1;
    int32 candidateId = 2;
}

message RequestVoteResponse {
    int32 term = 1;
    bool voteGranted = 2;
}

message AppendEntriesRequest {
    int32 term = 1;
    int32 leaderId = 2;
    repeated string entries = 3; // log entries
}

message AppendEntriesResponse {
    int32 term = 1;
    bool success = 2;
}

// đăng ký một node mới vào mạng 
message RegisterNodeRequest {
    int32 nodeId = 1;
    string address = 2; // Địa chỉ của node
}
message RegisterNodeResponse {
    bool success = 1;
}

message VoteRequest {
    int32 candidateId = 1;
    int32 term = 2;
}

message VoteResponse {
    bool voteGranted = 1;
    int32 term = 2;
}

// Thêm các thông điệp cho chức năng requestLeader
message RequestLeaderRequest {
    int32 term = 1; // Thời gian hiện tại của node
    int32 leaderId = 2;     // id của leader
    int32 value = 3;
}

message RequestLeaderResponse {
    int32 term = 1; // Thời gian hiện tại của leader
    int32 leaderId = 2; // ID của leader
}

// Danh sách các node
message NodeList {
    repeated NodeInfo nodes = 1; // Danh sách các node
}
// Thông điệp trống
message Empty {}

// Thông tin về node
message NodeInfo {
    int32 id = 1; // ID của node
    string address = 2; // Địa chỉ IP và cổng của node
}

// Phản hồi từ server
message Response {
    bool success = 1; // Trạng thái thành công
    string message = 2; // Thông điệp chi tiết
}

// thông tin về giá trị request tới leader
message RequestValueToLeaderRequest{
    int32 nodeRequestId = 1;
    int32 requestValue = 2;
    int32 term = 3;
}

// thông tin về request leader gửi tới các node để change value
message RequestVoteChangeValueRequest{
    int32 leaderId = 1 ;
    int32 term = 2;
    int32 requestValue = 3;
}

// phản hồi các node về việc change value 
message RequestVoteChangeValueResponse{
    int32 leaderId = 3;
    int32 term = 2;
    bool voteGranted = 1;
}

// Dịch vụ Raft
service Raft {
    rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse);
    rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);

    
    rpc RequestLeader(RequestLeaderRequest) returns (RequestLeaderResponse); 
    rpc RegisterNode(NodeInfo) returns (Response); 
    rpc GetNodeList(Empty) returns (NodeList);

    rpc RequestValueToLeader(RequestValueToLeaderRequest) returns (Response);
    rpc RequestVoteChangeValue(RequestVoteChangeValueRequest) returns (RequestVoteChangeValueResponse);
    

}


